<?php
declare(strict_types=1);

$NAMESPACE$

use $MODULE$\Contracts\Criteria\$CLASS$Criteria as $CLASS$CriteriaContract;
use $MODULE$\Traits\Criteria\$CLASS$CriteriaEloquent;
use $MODULE$\DTO\$CLASS$DTO;

final class $CLASS$Criteria implements $CLASS$CriteriaContract
{
    use $CLASS$CriteriaEloquent;

    /**
     * @var string[]
     */
    protected $filters = ['id', 'name'];

    /**
     * @var array
     */
    protected $data;

    /**
     * CategoryCriteria constructor.
     * @param $data
     */
    public function __construct($CLASS$DTO $data)
    {
        $this->data = $data->toArray();
    }

    /**
     * @param string|null $type
     * @return mixed
     */
    protected function id(?string $type = null)
    {
        return $this->builder->where('id', $type);
    }

    /**
     * @param string|null $type
     * @return mixed
     */
    protected function name(?string $type = null)
    {
        return $this->builder->where('name', $type);
    }

    /**
     * @return int
     */
    public function getLimit(): int
    {
        return $this->data['limit'];
    }

    public function getPage(): int
    {
        return $this->data['page'];
    }
}
